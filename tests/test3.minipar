# Implementação de um neurônio simples usando classes e objetos

class Neuronio {
    var input_val: number
    var output_desejado: number
    var peso: number
    var bias: number
    var peso_bias: number
    var taxa_aprendizado: number
    var erro: number
    var iteracao: number

    func init(input_val: number, output_desejado: number, peso_inicial: number, peso_bias_inicial: number, taxa_aprendizado: number) -> void {
        self.input_val = input_val
        self.output_desejado = output_desejado
        self.peso = peso_inicial
        self.bias = 1
        self.peso_bias = peso_bias_inicial
        self.taxa_aprendizado = taxa_aprendizado
        self.erro = 999999 # valor grande para iniciar
        self.iteracao = 0
    }

    func ativacao(soma: number) -> number {
        if (soma >= 0) {
            return 1
        } else {
            return 0
        }
    }

    func treinar() -> void {
        print("Entrada: " + self.input_val + " | Saída desejada: " + self.output_desejado)
        while (self.erro != 0) {
            self.iteracao = self.iteracao + 1
            print("\n#### Iteração: " + self.iteracao)
            print("Peso: " + self.peso)
            var soma: number = (self.input_val * self.peso) + (self.bias * self.peso_bias)
            var saida: number = self.ativacao(soma)
            print("Saída: " + saida)
            self.erro = self.output_desejado - saida
            print("Erro: " + self.erro)
            if (self.erro != 0) {
                self.peso = self.peso + (self.taxa_aprendizado * self.input_val * self.erro)
                print("Peso do bias: " + self.peso_bias)
                self.peso_bias = self.peso_bias + (self.taxa_aprendizado * self.bias * self.erro)
            }
        }
        print("\n✅ Parabéns! O neurônio aprendeu.")
        print("Valor desejado: " + self.output_desejado)
    }
}

seq {
    var neuronio: Neuronio = new Neuronio(1, 0, 0.5, 0.5, 0.01)
    neuronio.treinar()
}